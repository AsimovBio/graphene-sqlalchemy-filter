name: CI
on: [push]
env:
  DEFAULT_PYTHON_VERSION: 3.7

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Install nox
        run: |
          python -m pip install --upgrade pip
          pip install nox
      - name: Lint
        run: |
          nox -s lint

  test:
    name: Test
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox
      - name: Test
        run: |
          nox -s test -p ${{ matrix.python-version }}

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: [jobs, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Generate coverage report
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          pip install -e .
          pip install pytest "coverage<5.0.0" pytest-cov "coveralls==1.10.0"
          pytest --cov=graphene_sqlalchemy_filter tests
          coveralls

  pypi:
    name: Publish
    runs-on: ubuntu-latest
    needs: [jobs, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Create package
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
